{"timestamp":"2025-10-07T01:32:44.246332Z","level":"info","event":"DAG bundles loaded: dags-folder","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-07T01:32:44.246695Z","level":"info","event":"Filling up the DagBag from /Users/ananyaasthana/Desktop/Study/MLOps/Labs/Lab 2/Lab_3/dags/my_dag.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-07T01:32:45.987370Z","level":"warning","event":"The `airflow.operators.python.PythonOperator` attribute is deprecated. Please use `'airflow.providers.standard.operators.python.PythonOperator'`.","category":"DeprecatedImportWarning","filename":"/Users/ananyaasthana/Desktop/Study/MLOps/Labs/Lab 2/Lab_3/dags/my_dag.py","lineno":3,"logger":"py.warnings"}
{"timestamp":"2025-10-07T01:32:45.987787Z","level":"warning","event":"The `airflow.operators.python.BranchPythonOperator` attribute is deprecated. Please use `'airflow.providers.standard.operators.python.BranchPythonOperator'`.","category":"DeprecatedImportWarning","filename":"/Users/ananyaasthana/Desktop/Study/MLOps/Labs/Lab 2/Lab_3/dags/my_dag.py","lineno":3,"logger":"py.warnings"}
{"timestamp":"2025-10-07T01:32:45.987912Z","level":"warning","event":"The `airflow.operators.empty.EmptyOperator` attribute is deprecated. Please use `'airflow.providers.standard.operators.empty.EmptyOperator'`.","category":"DeprecatedImportWarning","filename":"/Users/ananyaasthana/Desktop/Study/MLOps/Labs/Lab 2/Lab_3/dags/my_dag.py","lineno":4,"logger":"py.warnings"}
{"timestamp":"2025-10-07T01:32:45.987996Z","level":"warning","event":"The `airflow.utils.trigger_rule.TriggerRule` attribute is deprecated. Please use `'airflow.task.trigger_rule.TriggerRule'`.","category":"DeprecatedImportWarning","filename":"/Users/ananyaasthana/Desktop/Study/MLOps/Labs/Lab 2/Lab_3/dags/my_dag.py","lineno":5,"logger":"py.warnings"}
{"timestamp":"2025-10-07T01:32:46.366160Z","level":"info","event":"Done. Returned value was: end_success","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-07T01:32:46.366365Z","level":"info","event":"Branch into end_success","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator","filename":"branch.py","lineno":44}
{"timestamp":"2025-10-07T01:32:46.366729Z","level":"info","event":"Following branch {'end_success'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator","filename":"skipmixin.py","lineno":152}
{"timestamp":"2025-10-07T01:32:46.366919Z","level":"info","event":"Pushing xcom","ti":"RuntimeTaskInstance(id=UUID('0199bc4a-9889-7c7a-806d-57412d3c5537'), task_id='check_accuracy_branch', dag_id='health_data_training_dag', run_id='manual__2025-10-07T01:30:29.353863+00:00', try_number=1, dag_version_id=UUID('0199bc34-5e33-71ae-8e94-a43adcc21331'), map_index=-1, hostname='ipsec-10-2-117-40.vpn.gatech.edu', context_carrier={}, task=<Task(BranchPythonOperator): check_accuracy_branch>, bundle_instance=LocalDagBundle(name=dags-folder), max_tries=1, start_date=datetime.datetime(2025, 10, 7, 1, 32, 44, 216890, tzinfo=datetime.timezone.utc), end_date=None, state=<TaskInstanceState.RUNNING: 'running'>, is_mapped=False, rendered_map_index=None)","logger":"task","filename":"task_runner.py","lineno":1352}
